name: Deploy to Amazon EC2

# 이벤트 : 워크플로우가 언제 실행이 될지를 결정하는 이벤트 작업
# main 브랜치에 push 작업이 발생이 되면
on:
  push:
    branches: [ "main" ]
  pull_request: # 협업할 때
    branches: [ "main" ]

# 워크플로우에서 변수선언
env:
  PROJECT_NAME: ezenshop
  AWS_REGION: ap-northeast-2  # 리전 : 아시아/태평양 서울
  AWS_S3_BUCKET: ezenshop1212-springboot-build
  AWS_CODE_DEPLOY_APPLICATION: ezenshop-springboot-webservice
  AWS_CODE_DEPLOY_GROUP: ezenshop-springboot-webservice-group

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build with Maven
      run: |
        chmod +x mvnw
        ./mvnw clean package -DskipTests
      # ./mvnw -B package --file pom.xml

  ### 위의 설정까지는 GitHub Actions 빌드
  ### 아래 설정은 빌드된 프로젝트를 AWS의 S3에 zip 파일로 업로드 EC2에서 배포
    
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        # GitHub Actions 에서 secrets로 추가한 변수 참조
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

    - name: S3에 업로드
      run: |
        zip -r $GITHUB_SHA.zip . -x "*.git*"
        aws s3 cp $GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

    - name: EC2에 배포
      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${AWS_S3_BUCKET},key=${GITHUB_SHA}.zip,bundleType=zip
